using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web.Mvc;
using Common_Objects.Models;

namespace Common_Objects.ViewModels
{
    public class CPRUnsuitabilityEditDataModel
    {

        //public CPRUnsuitabilityDataViewModel UnsuitablePersonDetails { get; set; }
        public int Unsuitability_Id { get; set; }

        public CPR_Unsuitability UnsuitablePerson { get; set; }
        public Client ChildDetails { get; set; }
        public CPR_Unsuitability_Findings Findings { get; set; }
        public CPR_Unsuitability_Incedent Incident { get; set; }
        public Client_CareGiver CareGiver { get; set; }
        public CPR_Unsuitability_Conviction Conviction { get; set; }
        public CPR_Unsuitability_Ruiling Ruling { get; set; }
        public CPR_Unsuitability_Forum ForumDetails { get; set; }
        public string ForumName { get; set; }
        public string ForumAddress { get; set; }
        public int SelectedIdType_Id { get; set; }

        public int ForumNumber_Id { get; set; }

        public string SelectedForumNumber { get; set; }

        public IEnumerable<Abuse_Indicator> AvailableAbuseIndicatorType { get; set; }
        public IList<Abuse_Indicator> SelectedAbuseIndicatorType { get; set; }
        public Posted_AbuseIndicatorType PostedAbuseIndicatorType { get; set; }

        public IEnumerable<CPR_Unsuitability_Incident_Abuse_Indicator> AvailableIncidentAbuseIndicatorType { get; set; }
        public IList<CPR_Unsuitability_Incident_Abuse_Indicator> SelectedIncidentAbuseIndicatorType { get; set; }
        public Posted_IncidentAbuseIndicatorType PostedIncidentAbuseIndicatorType { get; set; }

        public class Posted_AbuseIndicatorType
        {
            public int[] AbuseIndicatorTypeIDs { get; set; }

            public IEnumerable<SelectListItem> ListOfAbuseIndicatorTypeIDs { get; set; }
        }

        public class Posted_IncidentAbuseIndicatorType
        {
            public int[] IncidentAbuseIndicatorTypeIDs { get; set; }

            public IEnumerable<SelectListItem> ListOfIncidentAbuseIndicatorTypeIDs { get; set; }
        }


        public SelectList ForumList
        {
            get
            {
                var forums = new TownModel();
                var listofForums = forums.GetListOfForums();

                var newObj = (from l in listofForums
                              select new SelectListItem()
                              {
                                  Text = l.Forum_Name,
                                  Value = l.Forum_Id.ToString(CultureInfo.InvariantCulture),
                                  Selected = l.Forum_Id.Equals(SelectedForumNumber)
                              }).ToList();

                var selectList = new SelectList(newObj, "Value", "Text", SelectedForumNumber);
                return selectList;
            }
        }
        public SelectList IdTypes
        {
            get
            {
                var _db = new SDIIS_DatabaseEntities();
                var listOfIdTypes = (from m in _db.Identification_Types
                                     select m).ToList();

                var employers = (from m in listOfIdTypes
                                 select new SelectListItem()
                                 {
                                     Text = m.Description,
                                     Value = m.Identification_Type_Id.ToString(CultureInfo.InvariantCulture),
                                     Selected = m.Identification_Type_Id.Equals(SelectedIdType_Id)
                                 }).ToList();

                var selectList = new SelectList(employers, "Value", "Text", SelectedIdType_Id);

                return selectList;
            }
        }

        public int SelectedCourt_Id { get; set; }
        public SelectList CourtList
        {
            get
            {
                var _db = new SDIIS_DatabaseEntities();
                var listOfTitles = (from m in _db.Courts
                                    select m).ToList();

                var employers = (from m in listOfTitles
                                 select new SelectListItem()
                                 {
                                     Text = m.Description,
                                     Value = m.Court_Id.ToString(CultureInfo.InvariantCulture),
                                     Selected = m.Court_Id.Equals(SelectedCourt_Id)
                                 }).ToList();

                var selectList = new SelectList(employers, "Value", "Text", SelectedCourt_Id);

                return selectList;
            }
        }

        public int SelectedPopulationGroup_Id { get; set; }
        public SelectList PopulationGroupList
        {
            get
            {
                var _db = new SDIIS_DatabaseEntities();
                var listOfTitles = (from m in _db.Population_Groups
                                    select m).ToList();

                var employers = (from m in listOfTitles
                                 select new SelectListItem()
                                 {
                                     Text = m.Description,
                                     Value = m.Population_Group_Id.ToString(CultureInfo.InvariantCulture),
                                     Selected = m.Population_Group_Id.Equals(SelectedPopulationGroup_Id)
                                 }).ToList();

                var selectList = new SelectList(employers, "Value", "Text", SelectedPopulationGroup_Id);

                return selectList;
            }
        }


        public int SelectedChildGender_Id { get; set; }
        public SelectList GenderChildList
        {
            get
            {
                var _db = new SDIIS_DatabaseEntities();
                var listOfTitles = (from m in _db.Genders
                                    select m).ToList();

                var employers = (from m in listOfTitles
                                 select new SelectListItem()
                                 {
                                     Text = m.Description,
                                     Value = m.Gender_Id.ToString(CultureInfo.InvariantCulture),
                                     Selected = m.Gender_Id.Equals(SelectedChildGender_Id)
                                 }).ToList();

                var selectList = new SelectList(employers, "Value", "Text", SelectedChildGender_Id);

                return selectList;
            }
        }


        public int SelectedGender_Id { get; set; }
        public SelectList GenderList
        {
            get
            {
                var _db = new SDIIS_DatabaseEntities();
                var listOfTitles = (from m in _db.Genders
                                    select m).ToList();

                var employers = (from m in listOfTitles
                                 select new SelectListItem()
                                 {
                                     Text = m.Description,
                                     Value = m.Gender_Id.ToString(CultureInfo.InvariantCulture),
                                     Selected = m.Gender_Id.Equals(SelectedGender_Id)
                                 }).ToList();

                var selectList = new SelectList(employers, "Value", "Text", SelectedGender_Id);

                return selectList;
            }
        }

        public int SelectedAbuseType_Id { get; set; }
        public SelectList AbuseTypeList
        {
            get
            {
                var _db = new SDIIS_DatabaseEntities();
                var listOfTitles = (from m in _db.Abuse_Types
                                    select m).ToList();

                var employers = (from m in listOfTitles
                                 select new SelectListItem()
                                 {
                                     Text = m.Description,
                                     Value = m.Abuse_Type_Id.ToString(CultureInfo.InvariantCulture),
                                     Selected = m.Abuse_Type_Id.Equals(SelectedAbuseType_Id)
                                 }).ToList();

                var selectList = new SelectList(employers, "Value", "Text", SelectedAbuseType_Id);

                return selectList;
            }
        }

        public int SelectedMagDistrict { get; set; }
        public SelectList MagistrateList
        {
            get
            {
                var districts = new DistrictModel();
                var listOfDistricts = districts.GetListOfDistricts();

                var employers = (from m in listOfDistricts
                                 select new SelectListItem()
                                 {
                                     Text = m.Description,
                                     Value = m.District_Id.ToString(CultureInfo.InvariantCulture),
                                     Selected = m.District_Id.Equals(SelectedMagDistrict)
                                 }).ToList();

                var selectList = new SelectList(employers, "Value", "Text", SelectedMagDistrict);

                return selectList;
            }
        }

        public int SelectedProvinceId { get; set; }
        public SelectList ProvinceList
        {
            get
            {
                var provinces = new ProvinceModel();
                var listOfProvinces = provinces.GetListOfProvinces();

                var employers = (from m in listOfProvinces
                                 select new SelectListItem()
                                 {
                                     Text = m.Description,
                                     Value = m.Province_Id.ToString(CultureInfo.InvariantCulture),
                                     Selected = m.Province_Id.Equals(SelectedProvinceId)
                                 }).ToList();

                var selectList = new SelectList(employers, "Value", "Text", SelectedProvinceId);

                return selectList;
            }
        }

        public int RelationShipTypeId { get; set; }
        public SelectList RelationshipTypeList
        {
            get
            {
                var relationships = new RelationshipTypeModel();
                var listOfRelationships = relationships.GetListOfRelationshipTypes();

                var employers = (from m in listOfRelationships
                                 select new SelectListItem()
                                 {
                                     Text = m.Description,
                                     Value = m.Relationship_Type_Id.ToString(CultureInfo.InvariantCulture),
                                     Selected = m.Relationship_Type_Id.Equals(RelationShipTypeId)
                                 }).ToList();

                var selectList = new SelectList(employers, "Value", "Text", RelationShipTypeId);

                return selectList;
            }
        }

        public int SelectedTown_Id { get; set; }

        public SelectList TownList
        {
            get
            {
                var towns = new TownModel();
                var listOfTowns = towns.GetListOfTowns();

                var employers = (from m in listOfTowns
                                 select new SelectListItem()
                                 {
                                     Text = m.Description,
                                     Value = m.Town_Id.ToString(CultureInfo.InvariantCulture),
                                     Selected = m.Town_Id.Equals(SelectedTown_Id)
                                 }).ToList();

                var selectList = new SelectList(employers, "Value", "Text", SelectedTown_Id);

                return selectList;
            }
        }
    }
}
